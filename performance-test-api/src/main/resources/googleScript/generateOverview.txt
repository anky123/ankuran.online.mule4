function generateOverview() {
  var folderName = "RawResults";
  var singleReportDefaultSheetName = 'DO_NOT_TOUCH_SINGLE_REPORT_FORMAT';
  var aggregatedReportSheetName = 'AGGREGATED_REPORT';
  var fileList = [];
  
  Logger.log('PROCESS START');
  
  deleteAllIfExist_(singleReportDefaultSheetName,aggregatedReportSheetName);
  
  var rawFiles = getListOfFiles_(folderName);
  while(rawFiles.hasNext()){
    var rawFile = rawFiles.next();
    console.log("Raw file name : ", rawFile.getName());
    var row = []
    row.push(rawFile.getName(),rawFile.getId(),rawFile.getUrl())
    fileList.push(row);
  }
  
  var sortedFileList = fileList.sort();
  for (var i = 0; i <sortedFileList.length; i++){
    var fileName = sortedFileList[i][0];
    var newFileName = fileName.toString().replace(".csv","");
    deleteOldIfExist_(fileName);
    copyCSV_(fileName); 
    moveResults_(singleReportDefaultSheetName, newFileName); 
    fillIndividualSheetDetails_(newFileName, fileName);
  }
  fillAggregatedSheetDetails_(fileList, aggregatedReportSheetName);
  
  Logger.log('PROCESS END !');
};

function getListOfFiles_(folderName) {
  console.log("Fetch list Of Files from folder : ", folderName);
  var spreadsheetId =  SpreadsheetApp.getActiveSpreadsheet().getId();
  var spreadsheetFile =  DriveApp.getFileById(spreadsheetId);
  var folderId = spreadsheetFile.getParents().next().getId();
  var rawFilesFolders = DriveApp.getFolderById(folderId).getFoldersByName(folderName);
  var rawFilesFolder;
  while(rawFilesFolders.hasNext()){
    var rawFilesFolder = rawFilesFolders.next();
    console.log("Raw files stored at : ", rawFilesFolder.getName());
  }
  return rawFilesFolder.getFiles();
}

function copyCSV_(fileName) {
  var spreadsheetApp = SpreadsheetApp.getActive();
  spreadsheetApp.insertSheet(fileName);
  var file = DriveApp.getFilesByName(fileName).next();
  var csvData = Utilities.parseCsv(file.getBlob().getDataAsString());
  var sheet = SpreadsheetApp.getActiveSheet();
  var lastCellRange = sheet.getRange(1, 1, csvData.length, csvData[0].length).setValues(csvData);
};

function moveResults_(sourceSheetName, destinationSheetName) {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var sheet = ss.getSheetByName(sourceSheetName).copyTo(ss);
  deleteOldIfExist_(destinationSheetName);
  SpreadsheetApp.flush();
  sheet.setName(destinationSheetName);
  ss.setActiveSheet(sheet);
};

function deleteOldIfExist_(sheetName) {
  var oldSpreadsheet = SpreadsheetApp.getActiveSpreadsheet(); 
  var old = oldSpreadsheet.getSheetByName(sheetName);
  if (old) console.log("Delete old file : ", sheetName);
  if (old) oldSpreadsheet.deleteSheet(old); 
};

function fillIndividualSheetDetails_(newFileName, fileName) {
  var spreadsheet = SpreadsheetApp.getActive();
  var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  var macroSheet = spreadsheet.getSheetByName(newFileName);
  spreadsheet.setActiveSheet(macroSheet);

  var countTotalFormula = '=COUNT(' + "\'" + fileName + "\'" + '!A:A)';
  var successFormula = "=COUNTIF(" + "\'" + fileName + "\'" + "!G:G," +  "\"" + "TRUE" + "\""+ ")";
  var errorFormula = "=COUNTIF(" + "\'" + fileName + "\'" + "!G:G," +  "\"" + "FALSE" + "\""+ ")";
  var successRateFormula = '=((C2/B2)*100)';
  var errorRateFormula = '=((D2/B2)*100)';
  var averageResponseTimeFormula = '=AVERAGE(' + "\'" + fileName + "\'" + '!L:L)';
  
  console.log("Start filling details in : ", newFileName);
  macroSheet.getRange("A2").setValue(newFileName);
  macroSheet.getRange("B2").setFormula(countTotalFormula);
  macroSheet.getRange("C2").setFormula(successFormula);
  macroSheet.getRange("D2").setFormula(errorFormula);
  macroSheet.getRange("E2").setFormula(successRateFormula);
  macroSheet.getRange("F2").setFormula(errorRateFormula);
  macroSheet.getRange("G2").setFormula(averageResponseTimeFormula);
  
  var chart = macroSheet.newChart()
    .setChartType(Charts.ChartType.LINE)
    .asLineChart()
    .addRange(macroSheet.getRange("\'" + fileName + "\'" + "!L:L"))
    .setPosition(4, 5, 6, 6)
    .setOption("title", "Response time of each request")
    .setOption("hAxis", {title: "Response time (in sec)"})
    .build();
  macroSheet.insertChart(chart);
};


function fillAggregatedSheetDetails_(list, aggregatedReportSheetName) {
  var spreadsheet = SpreadsheetApp.getActive();
  var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  var macroSheet = spreadsheet.getSheetByName(aggregatedReportSheetName);
  spreadsheet.setActiveSheet(macroSheet);
  
  var row = 1;
  for (var i = 0; i <list.length; i++){
    row = row + 1;
    var fileName = list[i][0];
    var testName = fileName.toString().replace(".csv","");
    
    var countTotalFormula = '=COUNT(' + "\'" + fileName + "\'" + '!A:A)';
    var successFormula = "=COUNTIF(" + "\'" + fileName + "\'" + "!G:G," +  "\"" + "TRUE" + "\""+ ")";
    var errorFormula = "=COUNTIF(" + "\'" + fileName + "\'" + "!G:G," + "\"" + "FALSE" + "\""+ ")";
    var successRateFormula = '=(' + "\'" + testName + "\'" + '!C2/' + "\'" + testName + "\'" + '!B2)*100';
    var errorRateFormula = '=(' + "\'" + testName + "\'" + '!D2/' + "\'" + testName + "\'" + '!B2)*100';
    var averageResponseTimeFormula = '=AVERAGE(' + "\'" + fileName + "\'" + '!L:L)';
    
    console.log("Start filling aggregated reports for : ", fileName);
    spreadsheet.setActiveSheet(macroSheet);
    macroSheet.setCurrentCell(macroSheet.getRange(row,1)).setValue(testName); 
    macroSheet.setCurrentCell(macroSheet.getRange(row,2)).setFormula(countTotalFormula);
    macroSheet.setCurrentCell(macroSheet.getRange(row,3)).setFormula(successFormula);
    macroSheet.setCurrentCell(macroSheet.getRange(row,4)).setFormula(errorFormula);
    macroSheet.setCurrentCell(macroSheet.getRange(row,5)).setFormula(successRateFormula);
    macroSheet.setCurrentCell(macroSheet.getRange(row,6)).setFormula(errorRateFormula);
    macroSheet.setCurrentCell(macroSheet.getRange(row,7)).setFormula(averageResponseTimeFormula);
  }
};

function deleteAllIfExist_(singleReportDefaultSheetName,aggregatedReportSheetName) {
  console.log("Start cleaning the old files ");
  var sheetNames = sheetNames_();
  for (var i = 0; i <sheetNames.length; i++){
    var sheetName = sheetNames[i];
    if((sheetName == singleReportDefaultSheetName) || (sheetName == aggregatedReportSheetName)){} else {
      var oldSpreadsheet = SpreadsheetApp.getActiveSpreadsheet(); 
      var old = oldSpreadsheet.getSheetByName(sheetName);
      if (old) oldSpreadsheet.deleteSheet(old); 
      console.log("clean old file : ", sheetName);
    }
  }
};

function sheetNames_() {
  return SpreadsheetApp.getActiveSpreadsheet().getSheets().map(function(x) {return x.getName();});
};